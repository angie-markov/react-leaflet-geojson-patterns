{"version":3,"sources":["../../dist/index.es.js","App.js","index.js"],"names":["global","__webpack_require__","d","__webpack_exports__","GeoJSONFillable$1","index","react_leaflet__WEBPACK_IMPORTED_MODULE_0__","react_leaflet__WEBPACK_IMPORTED_MODULE_1__","leaflet__WEBPACK_IMPORTED_MODULE_2__","commonjsGlobal","window","self","asyncTag","funcTag","genTag","nullTag","proxyTag","undefinedTag","freeGlobal","Object","freeSelf","root","Function","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","Symbol$1","Symbol","symToStringTag","toStringTag","undefined","baseGetTag","value","isOwn","call","tag","e","result","getRawTag","objectToString","lodash_isfunction","type","isObject","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","_extends","assign","arguments","source","possibleConstructorReturn","ReferenceError","GeoJSONFillable","_Path","_ref","_temp","_this","this","_len","args","Array","_key","__proto__","getPrototypeOf","apply","concat","addedNotExistedPatterns","layers","style","map","leaflet","forEach","layer","featureStyle","feature","fillPattern","hasPattern","once","_ref2","pattern","setTimeout","setStyle","addPattern","addPatternToLayer","_ref3","subClass","superClass","create","constructor","setPrototypeOf","inherits","_this2","el","data","getOptions","getLayers","fromProps","toProps","leafletElement","setStyleIfChanged","getId","options","L","stamp","document","Pattern","Class","extend","includes","Evented","Mixin","Events","x","y","width","height","patternUnits","patternContentUnits","_addShapes","Util","falseFn","_update","initialize","_shapes","Error","setOptions","onAdd","_map","_initDefRoot","_initDom","_addDom","redraw","getEvents","on","fire","onRemove","_removeDom","_updateStyle","addTo","remove","removeFrom","removePattern","Map","addInitHook","_patterns","include","id","whenReady","_loaded","off","SVG_NS","_createElement","name","createElementNS","_dom","className","DomUtil","addClass","_defRoot","appendChild","dom","setAttribute","patternTransform","angle","transform","removeAttribute","getRenderer","renderer","_container","_pathRoot","_initPathRoot","SVG","_superUpdateStyle","fill","_path","Path","StripePattern","weight","spaceWeight","color","spaceColor","opacity","spaceOpacity","_stripe","PatternPath","stroke","_space","addShape","stripePattern","PatternShape","lineCap","lineJoin","fillOpacity","fillRule","_pattern","_updateShape","setShape","shape","_initDomElement","dashArray","dashOffset","fillColor","pointerEvents","interactive","PatternCircle","radius","PatternRect","rx","ry","CheckerBoardPattern","_shape1","_shape2","L$1","L$2","BasePattern","Shape","L$3","L$4","L$5","L$6","CirclePattern","RectPattern","PathPattern","BaseLayer","LayersControl","Overlay","App","state","selectedColor","toggleButtonHandler","setState","getFillPattern","properties","cartodb_id","Patterns","react_default","a","createElement","center","zoom","position","checked","TileLayer","attribution","url","index_es","geojson","right","top","zIndex","onClick","React","Component","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.d37b814f.chunk.js","sourcesContent":["import { Path, withLeaflet } from 'react-leaflet';\nimport { GeoJSON } from 'leaflet';\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    nullTag = '[object Null]',\n    proxyTag = '[object Proxy]',\n    undefinedTag = '[object Undefined]';\n/** Detect free variable `global` from Node.js. */\n\nvar freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;\n/** Detect free variable `self`. */\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar Symbol$1 = root.Symbol,\n    symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\n\n\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nvar lodash_isfunction = isFunction;\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n/**\n * GeoJSON supported fillPattern style\n */\n\n\nvar GeoJSONFillable = function (_Path) {\n  inherits(GeoJSONFillable, _Path);\n\n  function GeoJSONFillable() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, GeoJSONFillable);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = GeoJSONFillable.__proto__ || Object.getPrototypeOf(GeoJSONFillable)).call.apply(_ref, [this].concat(args))), _this), _this.addedNotExistedPatterns = function (layers, style) {\n      var map = _this.props.leaflet.map;\n      if (!style) return;\n      if (lodash_isfunction(style)) layers.forEach(function (layer) {\n        var featureStyle = style(layer.feature);\n\n        if (featureStyle.fillPattern && !map.hasPattern(featureStyle.fillPattern)) {\n          map.once('patternadd', function (_ref2) {\n            var pattern = _ref2.pattern; // console.log('added', pattern, layer);\n\n            setTimeout(function () {\n              return layer.setStyle({\n                fillPattern: pattern\n              });\n            }, 0);\n          });\n          map.addPattern(featureStyle.fillPattern);\n        }\n      });else if (style.fillPattern) {\n        _this.addPatternToLayer(style.fillPattern, _this);\n      }\n    }, _this.addPatternToLayer = function (pattern, layer) {\n      var map = _this.props.leaflet.map;\n\n      if (!map.hasPattern(pattern)) {\n        map.once('patternadd', function (_ref3) {\n          var pattern = _ref3.pattern;\n          setTimeout(function () {\n            return layer.setStyle({\n              fillPattern: pattern\n            });\n          }, 0);\n        });\n        map.addPattern(pattern);\n      } else {\n        layer.setStyle({\n          fillPattern: pattern\n        });\n      }\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(GeoJSONFillable, [{\n    key: 'createLeafletElement',\n    value: function createLeafletElement(props) {\n      var _this2 = this;\n\n      var el = new GeoJSON(props.data, this.getOptions(props));\n      el.once('add', function (e) {\n        _this2.addedNotExistedPatterns(e.target.getLayers(), props.style);\n      });\n      return el;\n    }\n  }, {\n    key: 'updateLeafletElement',\n    value: function updateLeafletElement(fromProps, toProps) {\n      if (lodash_isfunction(toProps.style)) {\n        this.addedNotExistedPatterns(this.leafletElement.getLayers(), toProps.style);\n        this.setStyle(toProps.style);\n      } else {\n        if (fromProps.style.fillPattern !== toProps.style.fillPattern) {\n          this.addPatternToLayer(toProps.style.fillPattern, this);\n        }\n\n        this.setStyleIfChanged(fromProps, toProps);\n      }\n    }\n  }]);\n  return GeoJSONFillable;\n}(Path);\n/** @component */\n\n\nvar GeoJSONFillable$1 = withLeaflet(GeoJSONFillable);\n/*\n Leaflet.pattern, Provides tools to set the backgrounds of vector shapes in Leaflet to be patterns.\n https://github.com/teastman/Leaflet.pattern\n (c) 2015, Tyler Eastman\n*/\n\nvar getId = function getId(value) {\n  var id = value.options.key || L.stamp(value);\n  return id;\n};\n\nvar L = window.L;\n\n(function (window, document, undefined) {\n  /*\n  * L.Pattern is the base class for fill patterns for leaflet Paths.\n  */\n  L.Pattern = L.Class.extend({\n    includes: L.Evented.prototype || L.Mixin.Events,\n    options: {\n      x: 0,\n      y: 0,\n      width: 8,\n      height: 8,\n      patternUnits: 'userSpaceOnUse',\n      patternContentUnits: 'userSpaceOnUse',\n      key: '' // angle: <0 - 360>\n      // patternTransform: <transform-list>\n\n    },\n    _addShapes: L.Util.falseFn,\n    _update: L.Util.falseFn,\n    initialize: function initialize(options) {\n      this._shapes = {};\n      if (!options.key) throw Error('Should define a unique option key');\n      L.setOptions(this, options);\n    },\n    onAdd: function onAdd(map) {\n      this._map = map.target ? map.target : map;\n\n      if (!this._map._initDefRoot) {\n        debugger;\n      }\n\n      this._map._initDefRoot(); // Create the DOM Object for the pattern.\n\n\n      this._initDom(); // Any shapes that were added before this was added to the map need to have their onAdd called.\n\n\n      for (var i in this._shapes) {\n        this._shapes[i].onAdd(this);\n      } // Call any children that want to add their own shapes.\n\n\n      this._addShapes(); // Add the DOM Object to the DOM Tree\n\n\n      this._addDom();\n\n      this.redraw();\n\n      if (this.getEvents) {\n        this._map.on(this.getEvents(), this);\n      }\n\n      this.fire('add');\n\n      this._map.fire('patternadd', {\n        pattern: this\n      });\n    },\n    onRemove: function onRemove() {\n      this._removeDom();\n    },\n    redraw: function redraw() {\n      if (this._map) {\n        this._update();\n\n        for (var i in this._shapes) {\n          this._shapes[i].redraw();\n        }\n      }\n\n      return this;\n    },\n    setStyle: function setStyle(style) {\n      L.setOptions(this, style);\n\n      if (this._map) {\n        this._updateStyle();\n\n        this.redraw();\n      }\n\n      return this;\n    },\n    addTo: function addTo(map) {\n      map.addPattern(this);\n      return this;\n    },\n    remove: function remove() {\n      return this.removeFrom(this._map);\n    },\n    removeFrom: function removeFrom(map) {\n      if (map) {\n        map.removePattern(this);\n      }\n\n      return this;\n    }\n  });\n  L.Map.addInitHook(function () {\n    this._patterns = {};\n  });\n  L.Map.include({\n    addPattern: function addPattern(pattern) {\n      var id = getId(pattern);\n\n      if (this._patterns[id]) {\n        return pattern;\n      }\n\n      this._patterns[id] = pattern;\n      this.whenReady(pattern.onAdd, pattern);\n      return this;\n    },\n    removePattern: function removePattern(pattern) {\n      var id = getId(pattern);\n\n      if (!this._patterns[id]) {\n        return this;\n      }\n\n      if (this._loaded) {\n        pattern.onRemove(this);\n      }\n\n      if (pattern.getEvents) {\n        this.off(pattern.getEvents(), pattern);\n      }\n\n      delete this._patterns[id];\n\n      if (this._loaded) {\n        this.fire('patternremove', {\n          pattern: pattern\n        });\n        pattern.fire('remove');\n      }\n\n      pattern._map = null;\n      return this;\n    },\n    hasPattern: function hasPattern(pattern) {\n      return !!pattern && getId(pattern) in this._patterns;\n    }\n  });\n  L.Pattern.SVG_NS = 'http://www.w3.org/2000/svg';\n  L.Pattern = L.Pattern.extend({\n    _createElement: function _createElement(name) {\n      return document.createElementNS(L.Pattern.SVG_NS, name);\n    },\n    _initDom: function _initDom() {\n      this._dom = this._createElement('pattern');\n\n      if (this.options.className) {\n        L.DomUtil.addClass(this._dom, this.options.className);\n      }\n\n      this._updateStyle();\n    },\n    _addDom: function _addDom() {\n      this._map._defRoot.appendChild(this._dom);\n    },\n    _removeDom: function _removeDom() {\n      L.DomUtil.remove(this._dom);\n    },\n    _updateStyle: function _updateStyle() {\n      var dom = this._dom;\n      var options = this.options;\n\n      if (!dom) {\n        return;\n      }\n\n      dom.setAttribute('id', getId(this));\n      dom.setAttribute('x', options.x);\n      dom.setAttribute('y', options.y);\n      dom.setAttribute('width', options.width);\n      dom.setAttribute('height', options.height);\n      dom.setAttribute('patternUnits', options.patternUnits);\n      dom.setAttribute('patternContentUnits', options.patternContentUnits);\n\n      if (options.patternTransform || options.angle) {\n        var transform = options.patternTransform ? options.patternTransform + ' ' : '';\n        transform += options.angle ? 'rotate(' + options.angle + ') ' : '';\n        dom.setAttribute('patternTransform', transform);\n      } else {\n        dom.removeAttribute('patternTransform');\n      }\n\n      for (var i in this._shapes) {\n        this._shapes[i]._updateStyle();\n      }\n    }\n  });\n  L.Map.include({\n    _initDefRoot: function _initDefRoot() {\n      if (!this._defRoot) {\n        if (typeof this.getRenderer === 'function') {\n          var renderer = this.getRenderer(this);\n          this._defRoot = L.Pattern.prototype._createElement('defs');\n\n          renderer._container.appendChild(this._defRoot);\n        } else {\n          if (!this._pathRoot) {\n            this._initPathRoot();\n          }\n\n          this._defRoot = L.Pattern.prototype._createElement('defs');\n\n          this._pathRoot.appendChild(this._defRoot);\n        }\n      }\n    }\n  });\n\n  if (L.SVG) {\n    L.SVG.include({\n      _superUpdateStyle: L.SVG.prototype._updateStyle,\n      _updateStyle: function _updateStyle(layer) {\n        this._superUpdateStyle(layer);\n\n        if (layer.options.fill && layer.options.fillPattern) {\n          layer._path.setAttribute('fill', 'url(#' + getId(layer.options.fillPattern) + ')');\n        }\n      }\n    });\n  } else {\n    L.Path.include({\n      _superUpdateStyle: L.Path.prototype._updateStyle,\n      _updateStyle: function _updateStyle() {\n        this._superUpdateStyle();\n\n        if (this.options.fill && this.options.fillPattern) {\n          this._path.setAttribute('fill', 'url(#' + getId(this.options.fillPattern) + ')');\n        }\n      }\n    });\n  }\n  /*\n     * L.StripePattern is an implementation of Pattern that creates stripes.\n     */\n\n\n  L.StripePattern = L.Pattern.extend({\n    options: {\n      weight: 4,\n      spaceWeight: 4,\n      color: '#000000',\n      spaceColor: '#ffffff',\n      opacity: 1.0,\n      spaceOpacity: 0.0\n    },\n    _addShapes: function _addShapes() {\n      this._stripe = new L.PatternPath({\n        stroke: true,\n        weight: this.options.weight,\n        color: this.options.color,\n        opacity: this.options.opacity\n      });\n      this._space = new L.PatternPath({\n        stroke: true,\n        weight: this.options.spaceWeight,\n        color: this.options.spaceColor,\n        opacity: this.options.spaceOpacity\n      });\n      this.addShape(this._stripe);\n      this.addShape(this._space);\n\n      this._update();\n    },\n    _update: function _update() {\n      this._stripe.options.d = 'M0 ' + this._stripe.options.weight / 2 + ' H ' + this.options.width;\n      this._space.options.d = 'M0 ' + (this._stripe.options.weight + this._space.options.weight / 2) + ' H ' + this.options.width;\n    },\n    setStyle: L.Pattern.prototype.setStyle\n  });\n\n  L.stripePattern = function (options) {\n    return new L.StripePattern(options);\n  };\n  /*\n     * L.PatternShape is the base class that is used to define the shapes in Patterns.\n     */\n\n\n  L.PatternShape = L.Class.extend({\n    options: {\n      stroke: true,\n      color: '#3388ff',\n      weight: 1,\n      opacity: 1,\n      lineCap: 'round',\n      lineJoin: 'round',\n      // dashArray: null\n      // dashOffset: null\n      // fill: false\n      // fillColor: same as color by default\n      fillOpacity: 0.2,\n      fillRule: 'evenodd' // fillPattern: L.Pattern\n\n    },\n    initialize: function initialize(options) {\n      L.setOptions(this, options);\n    },\n    // Called when the parent Pattern get's added to the map,\n    // or when added to a Pattern that is already on the map.\n    onAdd: function onAdd(pattern) {\n      this._pattern = pattern;\n\n      if (this._pattern._dom) {\n        this._initDom(); // This function is implemented by it's children.\n\n\n        this._addDom();\n      }\n    },\n    addTo: function addTo(pattern) {\n      pattern.addShape(this);\n      return this;\n    },\n    redraw: function redraw() {\n      if (this._pattern) {\n        this._updateShape(); // This function is implemented by it's children.\n\n      }\n\n      return this;\n    },\n    setStyle: function setStyle(style) {\n      L.setOptions(this, style);\n\n      if (this._pattern) {\n        this._updateStyle();\n      }\n\n      return this;\n    },\n    setShape: function setShape(shape) {\n      this.options = L.extend({}, this.options, shape);\n\n      this._updateShape();\n    }\n  });\n  L.Pattern.include({\n    addShape: function addShape(shape) {\n      var id = getId(shape);\n\n      if (this._shapes[id]) {\n        return shape;\n      }\n\n      this._shapes[id] = shape;\n      shape.onAdd(this);\n    }\n  });\n  L.PatternShape.SVG_NS = 'http://www.w3.org/2000/svg';\n  L.PatternShape = L.PatternShape.extend({\n    _createElement: function _createElement(name) {\n      return document.createElementNS(L.PatternShape.SVG_NS, name);\n    },\n    _initDom: L.Util.falseFn,\n    _updateShape: L.Util.falseFn,\n    _initDomElement: function _initDomElement(type) {\n      this._dom = this._createElement(type);\n\n      if (this.options.className) {\n        L.DomUtil.addClass(this._dom, this.options.className);\n      }\n\n      this._updateStyle();\n    },\n    _addDom: function _addDom() {\n      this._pattern._dom.appendChild(this._dom);\n    },\n    _updateStyle: function _updateStyle() {\n      var dom = this._dom;\n      var options = this.options;\n\n      if (!dom) {\n        return;\n      }\n\n      if (options.stroke) {\n        dom.setAttribute('stroke', options.color);\n        dom.setAttribute('stroke-opacity', options.opacity);\n        dom.setAttribute('stroke-width', options.weight);\n        dom.setAttribute('stroke-linecap', options.lineCap);\n        dom.setAttribute('stroke-linejoin', options.lineJoin);\n\n        if (options.dashArray) {\n          dom.setAttribute('stroke-dasharray', options.dashArray);\n        } else {\n          dom.removeAttribute('stroke-dasharray');\n        }\n\n        if (options.dashOffset) {\n          dom.setAttribute('stroke-dashoffset', options.dashOffset);\n        } else {\n          dom.removeAttribute('stroke-dashoffset');\n        }\n      } else {\n        dom.setAttribute('stroke', 'none');\n      }\n\n      if (options.fill) {\n        if (options.fillPattern) {\n          dom.setAttribute('fill', 'url(#' + getId(options.fillPattern) + ')');\n        } else {\n          dom.setAttribute('fill', options.fillColor || options.color);\n        }\n\n        dom.setAttribute('fill-opacity', options.fillOpacity);\n        dom.setAttribute('fill-rule', options.fillRule || 'evenodd');\n      } else {\n        dom.setAttribute('fill', 'none');\n      }\n\n      dom.setAttribute('pointer-events', options.pointerEvents || (options.interactive ? 'visiblePainted' : 'none'));\n    }\n  });\n  /*\n     * L.PatternPath is the implementation of PatternShape for adding Paths\n     */\n\n  L.PatternPath = L.PatternShape.extend({\n    //\toptions: {\n    // d: <svg path code>\n    //\t},\n    _initDom: function _initDom() {\n      this._initDomElement('path');\n    },\n    _updateShape: function _updateShape() {\n      if (!this._dom) {\n        return;\n      }\n\n      this._dom.setAttribute('d', this.options.d);\n    }\n  });\n  /*\n     * L.PatternCircle is the implementation of PatternShape for adding Circles\n     */\n\n  L.PatternCircle = L.PatternShape.extend({\n    options: {\n      x: 0,\n      y: 0,\n      radius: 0\n    },\n    _initDom: function _initDom() {\n      this._initDomElement('circle');\n    },\n    _updateShape: function _updateShape() {\n      if (!this._dom) {\n        return;\n      }\n\n      this._dom.setAttribute('cx', this.options.x);\n\n      this._dom.setAttribute('cy', this.options.y);\n\n      this._dom.setAttribute('r', this.options.radius);\n    }\n  });\n  /*\n     * L.PatternRect is the implementation of PatternShape for adding Rectangles\n     */\n\n  L.PatternRect = L.PatternShape.extend({\n    options: {\n      x: 0,\n      y: 0,\n      width: 10,\n      height: 10 // rx: x radius for rounded corners\n      // ry: y radius for rounded corners\n\n    },\n    _initDom: function _initDom() {\n      this._initDomElement('rect');\n    },\n    _updateShape: function _updateShape() {\n      if (!this._dom) {\n        return;\n      }\n\n      this._dom.setAttribute('x', this.options.x);\n\n      this._dom.setAttribute('y', this.options.y);\n\n      this._dom.setAttribute('width', this.options.width);\n\n      this._dom.setAttribute('height', this.options.height);\n\n      if (this.options.rx) {\n        this._dom.setAttribute('rx', this.options.rx);\n      }\n\n      if (this.options.ry) {\n        this._dom.setAttribute('ry', this.options.ry);\n      }\n    }\n  });\n  L.CheckerBoardPattern = L.Pattern.extend({\n    options: {\n      color: '#000000',\n      fillOpacity: 1\n    },\n    _addShapes: function _addShapes() {\n      this._shape1 = new L.PatternRect({\n        stroke: false,\n        fillOpacity: this.options.fillOpacity,\n        color: this.options.color,\n        fill: this.options.color,\n        x: 0,\n        y: 0,\n        width: this.options.width / 2,\n        height: this.options.height / 2\n      });\n      this._shape2 = new L.PatternRect({\n        stroke: false,\n        fillOpacity: this.options.fillOpacity,\n        color: this.options.color,\n        fill: this.options.color,\n        x: this.options.width / 2,\n        y: this.options.height / 2,\n        width: this.options.width / 2,\n        height: this.options.height / 2\n      });\n      this.addShape(this._shape1);\n      this.addShape(this._shape2);\n\n      this._update();\n    },\n    _update: function _update() {},\n    setStyle: L.Pattern.prototype.setStyle\n  });\n})(window, document);\n\nvar L$1 = window.L;\n/**\n * **key**: {string} - required.<br/>\n * **weight**: {number} (default: 4) - The width of the primary stripe.<br/>\n * **spaceWeight**: {number} (default: 4) - The width of the secondaty stripe, typically an empty space.<br/>\n * **color**: {color} (default: #000000) - The color of the primary stripe.<br/>\n * **spaceColor**: {color} (default: #ffffff) - The color of the secondary stripe.<br/>\n * **opacity**: {0.0 - 1.0} (default: 1.0) - The opacity of the primary stripe.<br/>\n * **spaceOpacity**: {0.0 - 1.0} (default: 0.0) - The opacity of the secondary stripe.<br/>\n *\n * @see See [API](https://github.com/teastman/Leaflet.pattern#stripes) for a list of properties\n * @component\n */\n\nvar StripePattern = function StripePattern(options) {\n  return new L$1.StripePattern(options);\n};\n\nvar L$2 = window.L;\n\nvar BasePattern = function BasePattern(options, Shape) {\n  var shape = new Shape(_extends({}, options));\n  var pattern = new L$2.Pattern(options);\n  pattern.addShape(shape);\n  return pattern;\n};\n\nvar L$3 = window.L;\n/**\n * **key**: {string} - required.<br/>\n * **x**: {number} (default: 0) - x offset of the circle.<br/>\n * **y**: {number} (default: 0) - y offset of the circle.<br/>\n * **radius**: {number} (default: 0) - radius of the circle.<br/>\n\n * @see See [API](https://github.com/teastman/Leaflet.pattern#circle) for a list of properties\n * @component\n */\n\nvar CirclePattern = function CirclePattern(options) {\n  return BasePattern(options, L$3.PatternCircle);\n};\n\nvar L$4 = window.L;\n/**\n * **key**: {string} - required.<br/>\n * **x**: {number} (default: 0) - x offset of the rectangle.<br/>\n * **y**: {number} (default: 0) - y offset of the rectangle.<br/>\n * **width**: {number} (default: 10) - width of the rectangle.<br/>\n * **height**: {number} (default: 10) - height of the rectangle.<br/>\n * **rx**: {number} (default: null) - x radius for rounded corners.<br/>\n * **ry**: {number} (default: null) - y radius for rounded corners.<br/>\n\n * @see See [API](https://github.com/teastman/Leaflet.pattern#rectangle) for a list of properties\n * @component\n */\n\nvar RectPattern = function RectPattern(options) {\n  return BasePattern(options, L$4.PatternRect);\n};\n\nvar L$5 = window.L;\n/**\n * **key** {string} - required.<br/>\n * **d** {path} (default: null) - The SVG path definition.\n * @see See [API](https://github.com/teastman/Leaflet.pattern#path) for a list of properties\n * @component\n */\n\nvar PathPattern = function PathPattern(options) {\n  return BasePattern(options, L$5.PatternPath);\n};\n\nvar L$6 = window.L;\n/**\n * **key**: {string} - required.<br/>\n * **width**: {number} (default: 12) - The width of the square.<br/>\n * **height**: {number} (default: 12) - The height of the square.<br/>\n * **color**: {color} (default: #000000) - The color of the square.<br/>\n * **fillOpacity**: {number} (default: 1) - The opacity of the primary square.<br/>\n\n * @component\n */\n\nvar CheckerBoardPattern = function CheckerBoardPattern(options) {\n  return new L$6.CheckerBoardPattern(options);\n};\n\nvar index = {\n  StripePattern: StripePattern,\n  CirclePattern: CirclePattern,\n  RectPattern: RectPattern,\n  PathPattern: PathPattern,\n  CheckerBoardPattern: CheckerBoardPattern\n};\nexport { GeoJSONFillable$1 as GeoJSONFillable, index as Patterns };","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Map, TileLayer, LayersControl } from 'react-leaflet'\nimport geojson from './samples/europe'\nimport { GeoJSONFillable, Patterns } from 'react-leaflet-geojson-patterns'\nconst { BaseLayer, Overlay } = LayersControl\n\nclass App extends React.Component {\n  state = {\n    selectedColor: 'lightyellow'\n  };\n\n  render() {\n    const { selectedColor } = this.state\n    return (\n      <Map\n        center={[55, 18]}\n        zoom={5}\n        style={{ height: '100vh' }}\n      >\n        <LayersControl position='topright'>\n          <BaseLayer checked name='OpenStreetMap'>\n            <TileLayer\n              attribution='&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors'\n              url='https://{s}.basemaps.cartocdn.com/dark_nolabels/{z}/{x}/{y}{r}.png'\n            />\n          </BaseLayer>\n          <Overlay checked name='Patterns'>\n            <GeoJSONFillable\n              data={geojson}\n              style={feature => ({\n                color: selectedColor,\n                fillPattern: this.getFillPattern(feature),\n                weight: 0.5,\n                fillOpacity: 0.5\n              })}\n            />\n          </Overlay>\n        </LayersControl>\n        <button\n          style={{ position: 'fixed', right: 10, top: 70, zIndex: 1001 }}\n          onClick={this.toggleButtonHandler}\n        >\n          Change color\n        </button>\n      </Map>\n    )\n  }\n  toggleButtonHandler = () =>\n    this.setState({\n      selectedColor: this.state.selectedColor !== 'red' ? 'red' : 'green'\n    });\n\n  getFillPattern = feature => {\n    const { selectedColor } = this.state\n\n    switch (feature.properties.cartodb_id % 6) {\n      case 0:\n        return Patterns.StripePattern({\n          key: 'stripe2' + selectedColor,\n          color: selectedColor,\n          weight: 1.5,\n          fillOpacity: 0.5,\n          angle: 45,\n          spaceWeight: 2\n        })\n      case 1:\n        return Patterns.CirclePattern({\n          x: 7,\n          y: 7,\n          radius: 3.5,\n          fill: true,\n          width: 15,\n          height: 15,\n          color: selectedColor,\n          key: 'circle' + selectedColor,\n          weight: 0.5,\n          angle: 45\n        })\n      case 2:\n        return Patterns.RectPattern({\n          width: 15,\n          height: 15,\n          rx: 2,\n          ry: 2,\n          fill: false,\n          color: selectedColor,\n          key: 'rect' + selectedColor,\n          weight: 0.8,\n          fillOpacity: 0.5,\n          angle: 45\n        })\n      case 3:\n        return Patterns.StripePattern({\n          key: 'stripe' + selectedColor,\n          color: selectedColor,\n          weight: 1.5,\n          fillOpacity: 0.5\n        })\n      case 4:\n        return Patterns.PathPattern({\n          d: 'M10 0 L7 20 L25 20 Z',\n          fill: true,\n          key: 'path' + selectedColor,\n          width: 20,\n          height: 25,\n          x: 5,\n          y: 5,\n          color: selectedColor,\n          weight: 0.5,\n          fillOpacity: 0.5\n        })\n      case 5:\n        return Patterns.CheckerBoardPattern({\n          key: 'checkerboard' + selectedColor,\n          color: selectedColor,\n          width: 20,\n          height: 20,\n          weight: 0.5\n        })\n    }\n  };\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}